body {
  background-color: black;
  color: white;
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}
.header {
  display: flex;
  justify-content: center;
  height: 12.5vh;
  background-color: #000000;
}
.title, .footer {
  text-align: center;
  line-height: 12.5vh;
  font-family:system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  font-size: 4vh;
}
.main {
  display: flex;
  justify-content: space-around;
  height: 75vh;
}
.code-page {
  overflow: auto;
  background: rgb(17, 17, 17);
  padding: 3vh;
  border: 1px solid #ccc;
  font-size: 14px;
  font-family: monospace;
  box-shadow: -4px 4px 2px 0 rgba(0,0,0,0.2);
  /**this is a neat property. It allows us to give a shadow to a given <div>**/
  /**reminder: Sequences of whitespace will collapse into a single whitespace. Text will never wrap to the next line. The text continues on the same line until a <br> tag is encountered.**/
  outline: 0;
  margin: 1vh 0.5vw;
  text-align: justify;
  width: 94%;
}
.main blockquote {
  font-size: 12px;
  font-style: italic;
}
.footer{
  background-color: black;
  font-size: 2vh;
  text-align: center;
  line-height: 12.5vh;
}

/*Tables*/
.tg {
  border-collapse:collapse;border-spacing:0;
  border-color:#ccc;
  font-size:12px;
  text-align:center;
  margin-left:auto; margin-right:auto;
}

.tg td {
  border-style:solid;border-width:1px;
  overflow:hidden;
  padding:10px 5px;
  word-break:normal;
  vertical-align:top;
}

.tg th {
  border-style:solid;
  border-width:1px;
  font-weight:normal;
  overflow:hidden;
  padding:10px 5px;
  word-break:normal;
  font-weight:bold;
  }

Selections: 
.selections {
  display: flex;
  justify-content: center;
}

.selection, .selection-h {
  background: none;
  border: none;
  outline: none;
  cursor: pointer;
  font-size: 2rem;
  transition: 100ms;
  margin: 2vh;
}

.selection-h img {
  height: 5vh;
}

.selection:hover {
  transform: scale(1.2);
}

.selection-h:hover {
  transform: scale(1.2)
}


/* Friendly reminder:

justify-content: center;
  Responsible for justifying flex items HORIZONTALLY in a flex container.

align-items: center;
  Responsible for aligning FLEX items on the dreamed VERTICAL axis; just take in consideration that the axis changes when you set the flex-direction to column.

justify-items: center;
  Responsible for aligning GRID items along the row (inline) axis. */